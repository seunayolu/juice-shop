variables:
    IMAGE_NAME: oluwaseuna/juice-shop-app
    IMAGE_TAG: 1.0
    SONAR_SCANNER_CLI: "sonarsource/sonar-scanner-cli:latest"   # SonarQube scanner Docker image

stages:
    - cache
    - test
    - sonarqube_scan
    - reports
    - build

create_cache:
    image: node:18-bullseye
    stage: cache
    script:
        - yarn install
    cache:
        key:
            files:
                - yarn.lock
        paths:
            - node_modules/
            - yarn.lock
            - .yarn
        policy: pull-push
    when: manual

yarn_test:
    image: node:18-bullseye
    stage: test
    script:
        - yarn install
        - yarn test
    cache:
        key:
            files:
                - yarn.lock
        paths:
            - node_modules/
            - yarn.lock
            - .yarn
        policy: pull
    when: manual

gitleaks:
    stage: test
    image: 
        name: zricethezav/gitleaks
        entrypoint: [""]
    script: 
        - gitleaks detect --verbose --source . -f json -r gitleaks.json
    allow_failure: true
    artifacts:
        when: always
        paths:
            - gitleaks.json
    when: manual

njsscan:
    stage: test
    image: python
    before_script:
        - pip3 install --upgrade njsscan
    script:
        - njsscan --exit-warning . --sarif -o njsscan.sarif
    allow_failure: true
    artifacts:
        when: always
        paths:
            - njsscan.sarif
    when: manual

semgrep:
    stage: test
    image: semgrep/semgrep
    variables:
      SEMGREP_RULES: p/javascript
    script:
        - semgrep ci --json --output semgrep.json
    allow_failure: true
    artifacts:
        when: always
        paths:
            - semgrep.json
    when: manual

sonarqube:
    stage: sonarqube_scan
    image: $SONAR_SCANNER_CLI
    script:
    - sonar-scanner -Dsonar.token=$SONAR_TOKEN
    allow_failure: true

upload_reports:
    stage: reports
    image: python
    before_script:
        - pip3 install requests
    script:
        - python3 upload-reports.py gitleaks.json
        - python3 upload-reports.py njsscan.sarif
        - python3 upload-reports.py semgrep.json
    when: manual

build_image:
    stage: build
    image: docker:27
    services:
        - docker:27-dind
    before_script:
        - echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
    script:
        - docker build -t $IMAGE_NAME:$IMAGE_TAG .
        - docker push $IMAGE_NAME:$IMAGE_TAG
    when: manual